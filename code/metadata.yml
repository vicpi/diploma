delimiters:
    - ":"
    - ";"
    - ","
    - "("
    - ")"
    - "["
    - "]"
    - "*"
    - "="
    - "<"
    - ">"
    - "/"
keywords:
    - array
    - begin
    - const
    - forward
    - do
    - else
    - end
    - false
    - for
    - function
    - if
    - of
    - or
    - procedure
    - program
    - record
    - then
    - to
    - true
    - type
    - var
    - while
predefined:
    - char
    - integer
    - boolean
    - double
    - real
    - string
double:
    - ":="
    - "<>"
    - "<="
    - ">="
    - ".."
multiplicative:
    - "*"
    - "/"
    - div
    - mod
    - and
additive:
    - "+"
    - "-"
    - or
    - xor
Relation:
    - "="
    - "<>"
    - "<="
    - ">="
    - "<"
    - ">"
whitespace:
    - "\n"
    - " "
    - "\t"
conditional_delimiters:
    ".":
        before:    "[0-9]"
        after:     "[0-9]"

sign:
    - "+"
    - "-"
re:
    '^[A-Za-z][A-Za-z_0-9]{0,255}$': "id"
    '^[+-]?\d{1,10}$': "intConst"
    '^([+-]?((\d+\.\d+)|(\d+\.\d+e[+-]\d+)))$': "floatConst"
    "^'.{0,65535}'$": "StringConst"
    '^not$': "Unary"
comment:
    start: "/*"
    end: "*/"
string: "'"
e:
    WrongWord: "Wrong word \"%s\" at line %d"
    Inconformity: "Syntax Error(%d): %s is expected (near %s)"
    eof: "End of file at line %d"
    Semantic: "Semantic Error(%d): %s"
eol: "\n"